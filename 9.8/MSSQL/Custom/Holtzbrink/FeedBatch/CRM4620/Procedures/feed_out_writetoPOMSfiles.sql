IF exists (select * from dbo.sysobjects where id = object_id(N'dbo.FEED_OUT_WRITETOPOMSFILES') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
  DROP PROCEDURE dbo.FEED_OUT_WRITETOPOMSFILES

GO



  /*****
  *  WARNING ORA2MS-4016 line: 3 col: 17: Type VARCHAR2 of argument p_location  was changed to varchar(8000)
  *  WARNING ORA2MS-4016 line: 4 col: 17: Type VARCHAR2 of argument p_filename  was changed to varchar(8000)
  *  WARNING ORA2MS-4016 line: 5 col: 18: Type VARCHAR2 of argument p_tablename  was changed to varchar(8000)
  *  WARNING ORA2MS-4016 line: 6 col: 22: Type VARCHAR2 of argument p_fielddelimiter  was changed to varchar(8000)
  *  WARNING ORA2MS-4016 line: 7 col: 26: Type VARCHAR2 of argument p_rowdelimiter  was changed to varchar(8000)
  *****/

  CREATE 
    PROCEDURE dbo.FEED_OUT_WRITETOPOMSFILES 
        @p_location varchar(8000),
        @p_filename varchar(8000),
        @p_tablename varchar(8000),
        @p_fielddelimiter varchar(8000),
        @p_rowdelimiter varchar(8000)
    AS
      /*
       -- Generated by SQL Server Migration Assistant for Oracle
       --  Please, contact SSMAHELP@microsoft.com or visit http://www.microsoft.com/sql/migration for more information.
       --*/
      DECLARE 

        /*****
        *  WARNING ORA2MS-4016 line: 9 col: 18: Type UTL_FILE.FILE_TYPE of variable lv_file_id_num  was changed to char(100)
        *****/

        @lv_file_id_num char(100),

        /*****
        *  WARNING ORA2MS-4016 line: 10 col: 19: Type UTL_FILE.FILE_TYPE of variable lv_file_id_num2  was changed to char(100)
        *****/

        @lv_file_id_num2 char(100),

        /*****
        *  WARNING ORA2MS-4016 line: 11 col: 19: Type VARCHAR2(10000) of variable lv_output_string  was changed to varchar(max)
        *****/

        @lv_output_string varchar(max),
        @ffeeddate datetime,
        @tfeeddate datetime,

        /*****
        *  WARNING ORA2MS-4016 line: 14 col: 12: Type number(3) of variable firstrow  was changed to numeric(3, 0)
        *****/

        @firstrow numeric(3, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 15 col: 13: Type number(10) of variable totalcount  was changed to numeric(10, 0)
        *****/

        @totalcount numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 16 col: 18: Type number(10) of variable totalbinderyqty  was changed to numeric(10, 0)
        *****/

        @totalbinderyqty numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 17 col: 13: Type number(10) of variable totalwhqty  was changed to numeric(10, 0)
        *****/

        @totalwhqty numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 18 col: 18: Type number(10) of variable totalqtyordered  was changed to numeric(10, 0)
        *****/

        @totalqtyordered numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 19 col: 18: Type number(10) of variable totalppestmfruc  was changed to numeric(10, 0)
        *****/

        @totalppestmfruc numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 20 col: 19: Type number(10) of variable totaloriestmfruc  was changed to numeric(10, 0)
        *****/

        @totaloriestmfruc numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 21 col: 17: Type number(10) of variable totalestmfrtot  was changed to numeric(10, 0)
        *****/

        @totalestmfrtot numeric(10, 0),

        /*****
        *  WARNING ORA2MS-4016 line: 22 col: 18: Type number(10) of variable feedout_batchid  was changed to numeric(10, 0)
        *****/

        @feedout_batchid numeric(10, 0),
        @feedout_batchid_char varchar(8),
        @c_filename varchar(50)      
      SET @firstrow = 1
      SET @totalcount = 0
      SET @totalbinderyqty = 0
      SET @totalwhqty = 0
      SET @totalqtyordered = 0
      SET @totalppestmfruc = 0
      SET @totaloriestmfruc = 0
      SET @totalestmfrtot = 0
      SET @feedout_batchid = 0
      SET @feedout_batchid_char = ''
      SET @c_filename = ''
      BEGIN

        IF (upper(@p_tablename) = 'POFEEDOUT')
          BEGIN
            /*
             -- 2-1-04 only get rows that have recordtype.. means fully
             -- processed
             --*/
              DECLARE 
                @lv_feedout_row$RECORDNAME varchar(8000),
                @lv_feedout_row$RECORDTYPE varchar(8000),
                @lv_feedout_row$ISBN10 varchar(8000),
                @lv_feedout_row$PONUMBER varchar(8000),
                @lv_feedout_row$SUPPLIER varchar(8000),
                @lv_feedout_row$ORDERTYPE varchar(8000),
                @lv_feedout_row$PACKPO varchar(8000),
                @lv_feedout_row$REQUESTIONER varchar(8000),
                @lv_feedout_row$PRINTINGNUMBER INT,
                @lv_feedout_row$ESTDETAILS varchar(8000),
                @lv_feedout_row$PACKSIZE float(53),
                @lv_feedout_row$BINDERYQTY INT,
                @lv_feedout_row$WAREHOUSEQTY INT,
                @lv_feedout_row$ORDEREDQTY INT,
                @lv_feedout_row$EDITIONTOTALCOST INT,
                @lv_feedout_row$PLANTTOTALCOST INT,
                @lv_feedout_row$ORDEREDDATE varchar(8000),
                @lv_feedout_row$DUEDATE varchar(8000),
                @lv_feedout_row$PUBPRICE varchar(8000),
                @lv_feedout_row$BINDINGS INT,
                @lv_feedout_row$CARTONINGPALLETING INT,
                @lv_feedout_row$STAMPDIES INT,
                @lv_feedout_row$COVERPRINTING INT,
                @lv_feedout_row$COVERS INT,
                @lv_feedout_row$DOCUTECH INT,
                @lv_feedout_row$ENDPAPERS INT,
                @lv_feedout_row$ENDPAPERPRINTING INT,
                @lv_feedout_row$IMPORTDUTY INT,
                @lv_feedout_row$INBOUNDFREIGHT INT,
                @lv_feedout_row$INSERTEDITION INT,
                @lv_feedout_row$JACKETCOVERPAPER INT,
                @lv_feedout_row$JACKETPRINTING INT,
                @lv_feedout_row$MISC INT,
                @lv_feedout_row$MULTMEDMA INT,
                @lv_feedout_row$PAPERSTOCK INT,
                @lv_feedout_row$PLATES INT,
                @lv_feedout_row$PRINTERSUPPLIEDPAPER INT,
                @lv_feedout_row$PURCHFG INT,
                @lv_feedout_row$SPECIALMATERIALPACKING INT,
                @lv_feedout_row$TEXTPRINTING INT,
                @lv_feedout_row$ALTERATION INT,
                @lv_feedout_row$ART INT,
                @lv_feedout_row$AUTHORRELATED INT,
                @lv_feedout_row$COMPONENTDESIGNFEES INT,
                @lv_feedout_row$COMPOSITION INT,
                @lv_feedout_row$COPYEDITING INT,
                @lv_feedout_row$COVERJACKETS INT,
                @lv_feedout_row$EDITORIALRELATED INT,
                @lv_feedout_row$FREIGHT INT,
                @lv_feedout_row$FULLSERVICEMANAGEMENT INT,
                @lv_feedout_row$INDEXING INT,
                @lv_feedout_row$INSERTPLANT INT,
                @lv_feedout_row$MULTIMEDIAEDITORIAL INT,
                @lv_feedout_row$MULTIMEDIALPRODUCTION INT,
                @lv_feedout_row$OFFSET INT,
                @lv_feedout_row$OTHER INT,
                @lv_feedout_row$PHOTO INT,
                @lv_feedout_row$POD INT,
                @lv_feedout_row$PROOFREADING INT,
                @lv_feedout_row$PROOFSBLUES INT,
                @lv_feedout_row$RESEARCH INT,
                @lv_feedout_row$SEPERATIONSSCANSFILMS INT,
                @lv_feedout_row$TEXTPLANT INT,
                @lv_feedout_row$TEXTDESIGN INT,
                @lv_feedout_row$TOLERANCE varchar(8000),
                @lv_feedout_row$ESTUNITCOST INT,
                @lv_feedout_row$ESTMFRTOT INT,
                @lv_feedout_row$DELCOMPLETE varchar(8000),
                @lv_feedout_row$COMPLETEQTY varchar(8000),
                @lv_feedout_row$COMPLETEQTYDATE varchar(8000),
                @lv_feedout_row$COMPLETEVAL varchar(8000),
                @lv_feedout_row$COMPLETEVALDATE varchar(8000),
                @lv_feedout_row$POCOMMENT varchar(8000),
                @lv_feedout_row$PPESTCOST25 INT,
                @lv_feedout_row$PPESTCOST26 INT,
                @lv_feedout_row$PPESTCOST27 INT,
                @lv_feedout_row$PPESTCOST28 INT,
                @lv_feedout_row$PPESTCOST29 INT,
                @lv_feedout_row$PPESTCOST30 INT,
                @lv_feedout_row$ORIESTCOST22 INT,
                @lv_feedout_row$ORIESTCOST23 INT,
                @lv_feedout_row$ORIESTCOST24 INT,
                @lv_feedout_row$ORIESTCOST25 INT,
                @lv_feedout_row$ORIESTCOST26 INT,
                @lv_feedout_row$ORIESTCOST27 INT,
                @lv_feedout_row$ORIESTCOST28 INT,
                @lv_feedout_row$ORIESTCOST29 INT,
                @lv_feedout_row$ORIESTCOST30 INT,
                @lv_feedout_row$STATUSCODE varchar(8000),
                @lv_feedout_row$ESTPREPRESSTOTAL varchar(8000)              
              BEGIN TRY

                BEGIN

                  DECLARE 
                    @lv_feedout_row$RECORDNAME$2 varchar(8000),
                    @lv_feedout_row$RECORDTYPE$2 varchar(8000),
                    @lv_feedout_row$ISBN10$2 varchar(8000),
                    @lv_feedout_row$PONUMBER$2 varchar(8000),
                    @lv_feedout_row$SUPPLIER$2 varchar(8000),
                    @lv_feedout_row$ORDERTYPE$2 varchar(8000),
                    @lv_feedout_row$PACKPO$2 varchar(8000),
                    @lv_feedout_row$REQUESTIONER$2 varchar(8000),
                    @lv_feedout_row$PRINTINGNUMBER$2 INT,
                    @lv_feedout_row$ESTDETAILS$2 varchar(8000),
                    @lv_feedout_row$PACKSIZE$2 INT,
                    @lv_feedout_row$BINDERYQTY$2 INT,
                    @lv_feedout_row$WAREHOUSEQTY$2 INT,
                    @lv_feedout_row$ORDEREDQTY$2 INT,
                    @lv_feedout_row$EDITIONTOTALCOST$2 INT,
                    @lv_feedout_row$PLANTTOTALCOST$2 INT,
                    @lv_feedout_row$ORDEREDDATE$2 varchar(8000),
                    @lv_feedout_row$DUEDATE$2 varchar(8000),
                    @lv_feedout_row$PUBPRICE$2 varchar(8000),
                    @lv_feedout_row$BINDINGS$2 INT,
                    @lv_feedout_row$CARTONINGPALLETING$2 INT,
                    @lv_feedout_row$STAMPDIES$2 INT,
                    @lv_feedout_row$COVERPRINTING$2 INT,
                    @lv_feedout_row$COVERS$2 INT,
                    @lv_feedout_row$DOCUTECH$2 INT,
                    @lv_feedout_row$ENDPAPERS$2 INT,
                    @lv_feedout_row$ENDPAPERPRINTING$2 INT,
                    @lv_feedout_row$IMPORTDUTY$2 INT,
                    @lv_feedout_row$INBOUNDFREIGHT$2 INT,
                    @lv_feedout_row$INSERTEDITION$2 INT,
                    @lv_feedout_row$JACKETCOVERPAPER$2 INT,
                    @lv_feedout_row$JACKETPRINTING$2 INT,
                    @lv_feedout_row$MISC$2 INT,
                    @lv_feedout_row$MULTMEDMA$2 INT,
                    @lv_feedout_row$PAPERSTOCK$2 INT,
                    @lv_feedout_row$PLATES$2 INT,
                    @lv_feedout_row$PRINTERSUPPLIEDPAPER$2 INT,
                    @lv_feedout_row$PURCHFG$2 INT,
                    @lv_feedout_row$SPECIALMATERIALPACKING$2 INT,
                    @lv_feedout_row$TEXTPRINTING$2 INT,
                    @lv_feedout_row$ALTERATION$2 INT,
                    @lv_feedout_row$ART$2 INT,
                    @lv_feedout_row$AUTHORRELATED$2 INT,
                    @lv_feedout_row$COMPONENTDESIGNFEES$2 INT,
                    @lv_feedout_row$COMPOSITION$2 INT,
                    @lv_feedout_row$COPYEDITING$2 INT,
                    @lv_feedout_row$COVERJACKETS$2 INT,
                    @lv_feedout_row$EDITORIALRELATED$2 INT,
                    @lv_feedout_row$FREIGHT$2 INT,
                    @lv_feedout_row$FULLSERVICEMANAGEMENT$2 INT,
                    @lv_feedout_row$INDEXING$2 INT,
                    @lv_feedout_row$INSERTPLANT$2 INT,
                    @lv_feedout_row$MULTIMEDIAEDITORIAL$2 INT,
                    @lv_feedout_row$MULTIMEDIALPRODUCTION$2 INT,
                    @lv_feedout_row$OFFSET$2 INT,
                    @lv_feedout_row$OTHER$2 INT,
                    @lv_feedout_row$PHOTO$2 INT,
                    @lv_feedout_row$POD$2 INT,
                    @lv_feedout_row$PROOFREADING$2 INT,
                    @lv_feedout_row$PROOFSBLUES$2 INT,
                    @lv_feedout_row$RESEARCH$2 INT,
                    @lv_feedout_row$SEPERATIONSSCANSFILMS$2 INT,
                    @lv_feedout_row$TEXTPLANT$2 INT,
                    @lv_feedout_row$TEXTDESIGN$2 INT,
                    @lv_feedout_row$TOLERANCE$2 varchar(8000),
                    @lv_feedout_row$ESTUNITCOST$2 INT,
                    @lv_feedout_row$ESTMFRTOT$2 INT,
                    @lv_feedout_row$DELCOMPLETE$2 varchar(8000),
                    @lv_feedout_row$COMPLETEQTY$2 varchar(8000),
                    @lv_feedout_row$COMPLETEQTYDATE$2 varchar(8000),
                    @lv_feedout_row$COMPLETEVAL$2 varchar(8000),
                    @lv_feedout_row$COMPLETEVALDATE$2 varchar(8000),
                    @lv_feedout_row$POCOMMENT$2 varchar(8000),
                    @lv_feedout_row$PPESTCOST25$2 INT,
                    @lv_feedout_row$PPESTCOST26$2 INT,
                    @lv_feedout_row$PPESTCOST27$2 INT,
                    @lv_feedout_row$PPESTCOST28$2 INT,
                    @lv_feedout_row$PPESTCOST29$2 INT,
                    @lv_feedout_row$PPESTCOST30$2 INT,
                    @lv_feedout_row$ORIESTCOST22$2 INT,
                    @lv_feedout_row$ORIESTCOST23$2 INT,
                    @lv_feedout_row$ORIESTCOST24$2 INT,
                    @lv_feedout_row$ORIESTCOST25$2 INT,
                    @lv_feedout_row$ORIESTCOST26$2 INT,
                    @lv_feedout_row$ORIESTCOST27$2 INT,
                    @lv_feedout_row$ORIESTCOST28$2 INT,
                    @lv_feedout_row$ORIESTCOST29$2 INT,
                    @lv_feedout_row$ORIESTCOST30$2 INT,
                    @lv_feedout_row$STATUSCODE$2 varchar(8000),
                    @lv_feedout_row$ESTPREPRESSTOTAL$2 varchar(8000)                  

                  DECLARE 
                    c_feedout CURSOR LOCAL 
                     FOR 

                      /*****
                      *  INFO ORA2MS-6011 : All asterisks in expression list were expanded into real expressions.
                      *****/

                      SELECT 
                          dbo.POFEEDOUT.RECORDNAME, 
                          dbo.POFEEDOUT.RECORDTYPE, 
                          dbo.POFEEDOUT.ISBN10, 
                          dbo.POFEEDOUT.PONUMBER, 
                          dbo.POFEEDOUT.SUPPLIER, 
                          dbo.POFEEDOUT.ORDERTYPE, 
                          dbo.POFEEDOUT.PACKPO, 
                          dbo.POFEEDOUT.REQUESTIONER, 
                          dbo.POFEEDOUT.PRINTINGNUMBER, 
                          dbo.POFEEDOUT.ESTDETAILS, 
                          dbo.POFEEDOUT.PACKSIZE, 
                          dbo.POFEEDOUT.BINDERYQTY, 
                          dbo.POFEEDOUT.WAREHOUSEQTY, 
                          dbo.POFEEDOUT.ORDEREDQTY, 
                          dbo.POFEEDOUT.EDITIONTOTALCOST, 
                          dbo.POFEEDOUT.PLANTTOTALCOST, 
                          dbo.POFEEDOUT.ORDEREDDATE, 
                          dbo.POFEEDOUT.DUEDATE, 
                          dbo.POFEEDOUT.PUBPRICE, 
                          dbo.POFEEDOUT.BINDINGS, 
                          dbo.POFEEDOUT.CARTONINGPALLETING, 
                          dbo.POFEEDOUT.STAMPDIES, 
                          dbo.POFEEDOUT.COVERPRINTING, 
                          dbo.POFEEDOUT.COVERS, 
                          dbo.POFEEDOUT.DOCUTECH, 
                          dbo.POFEEDOUT.ENDPAPERS, 
                          dbo.POFEEDOUT.ENDPAPERPRINTING, 
                          dbo.POFEEDOUT.IMPORTDUTY, 
                          dbo.POFEEDOUT.INBOUNDFREIGHT, 
                          dbo.POFEEDOUT.INSERTEDITION, 
                          dbo.POFEEDOUT.JACKETCOVERPAPER, 
                          dbo.POFEEDOUT.JACKETPRINTING, 
                          dbo.POFEEDOUT.MISC, 
                          dbo.POFEEDOUT.MULTMEDMA, 
                          dbo.POFEEDOUT.PAPERSTOCK, 
                          dbo.POFEEDOUT.PLATES, 
                          dbo.POFEEDOUT.PRINTERSUPPLIEDPAPER, 
                          dbo.POFEEDOUT.PURCHFG, 
                          dbo.POFEEDOUT.SPECIALMATERIALPACKING, 
                          dbo.POFEEDOUT.TEXTPRINTING, 
                          dbo.POFEEDOUT.ALTERATION, 
                          dbo.POFEEDOUT.ART, 
                          dbo.POFEEDOUT.AUTHORRELATED, 
                          dbo.POFEEDOUT.COMPONENTDESIGNFEES, 
                          dbo.POFEEDOUT.COMPOSITION, 
                          dbo.POFEEDOUT.COPYEDITING, 
                          dbo.POFEEDOUT.COVERJACKETS, 
                          dbo.POFEEDOUT.EDITORIALRELATED, 
                          dbo.POFEEDOUT.FREIGHT, 
                          dbo.POFEEDOUT.FULLSERVICEMANAGEMENT, 
                          dbo.POFEEDOUT.INDEXING, 
                          dbo.POFEEDOUT.INSERTPLANT, 
                          dbo.POFEEDOUT.MULTIMEDIAEDITORIAL, 
                          dbo.POFEEDOUT.MULTIMEDIALPRODUCTION, 
                          dbo.POFEEDOUT.OFFSET, 
                          dbo.POFEEDOUT.OTHER, 
                          dbo.POFEEDOUT.PHOTO, 
                          dbo.POFEEDOUT.POD, 
                          dbo.POFEEDOUT.PROOFREADING, 
                          dbo.POFEEDOUT.PROOFSBLUES, 
                          dbo.POFEEDOUT.RESEARCH, 
                          dbo.POFEEDOUT.SEPERATIONSSCANSFILMS, 
                          dbo.POFEEDOUT.TEXTPLANT, 
                          dbo.POFEEDOUT.TEXTDESIGN, 
                          dbo.POFEEDOUT.TOLERANCE, 
                          dbo.POFEEDOUT.ESTUNITCOST, 
                          dbo.POFEEDOUT.ESTMFRTOT, 
                          dbo.POFEEDOUT.DELCOMPLETE, 
                          dbo.POFEEDOUT.COMPLETEQTY, 
                          dbo.POFEEDOUT.COMPLETEQTYDATE, 
                          dbo.POFEEDOUT.COMPLETEVAL, 
                          dbo.POFEEDOUT.COMPLETEVALDATE, 
                          dbo.POFEEDOUT.POCOMMENT, 
                          dbo.POFEEDOUT.PPESTCOST25, 
                          dbo.POFEEDOUT.PPESTCOST26, 
                          dbo.POFEEDOUT.PPESTCOST27, 
                          dbo.POFEEDOUT.PPESTCOST28, 
                          dbo.POFEEDOUT.PPESTCOST29, 
                          dbo.POFEEDOUT.PPESTCOST30, 
                          dbo.POFEEDOUT.ORIESTCOST22, 
                          dbo.POFEEDOUT.ORIESTCOST23, 
                          dbo.POFEEDOUT.ORIESTCOST24, 
                          dbo.POFEEDOUT.ORIESTCOST25, 
                          dbo.POFEEDOUT.ORIESTCOST26, 
                          dbo.POFEEDOUT.ORIESTCOST27, 
                          dbo.POFEEDOUT.ORIESTCOST28, 
                          dbo.POFEEDOUT.ORIESTCOST29, 
                          dbo.POFEEDOUT.ORIESTCOST30, 
                          dbo.POFEEDOUT.STATUSCODE, 
                          dbo.POFEEDOUT.ESTPREPRESSTOTAL
                        FROM dbo.POFEEDOUT
                        WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')
                      ORDER BY dbo.POFEEDOUT.ISBN10
                  

                  OPEN c_feedout

                  FETCH NEXT FROM c_feedout
                    INTO 
                      @lv_feedout_row$RECORDNAME$2, 
                      @lv_feedout_row$RECORDTYPE$2, 
                      @lv_feedout_row$ISBN10$2, 
                      @lv_feedout_row$PONUMBER$2, 
                      @lv_feedout_row$SUPPLIER$2, 
                      @lv_feedout_row$ORDERTYPE$2, 
                      @lv_feedout_row$PACKPO$2, 
                      @lv_feedout_row$REQUESTIONER$2, 
                      @lv_feedout_row$PRINTINGNUMBER$2, 
                      @lv_feedout_row$ESTDETAILS$2, 
                      @lv_feedout_row$PACKSIZE$2, 
                      @lv_feedout_row$BINDERYQTY$2, 
                      @lv_feedout_row$WAREHOUSEQTY$2, 
                      @lv_feedout_row$ORDEREDQTY$2, 
                      @lv_feedout_row$EDITIONTOTALCOST$2, 
                      @lv_feedout_row$PLANTTOTALCOST$2, 
                      @lv_feedout_row$ORDEREDDATE$2, 
                      @lv_feedout_row$DUEDATE$2, 
                      @lv_feedout_row$PUBPRICE$2, 
                      @lv_feedout_row$BINDINGS$2, 
                      @lv_feedout_row$CARTONINGPALLETING$2, 
                      @lv_feedout_row$STAMPDIES$2, 
                      @lv_feedout_row$COVERPRINTING$2, 
                      @lv_feedout_row$COVERS$2, 
                      @lv_feedout_row$DOCUTECH$2, 
                      @lv_feedout_row$ENDPAPERS$2, 
                      @lv_feedout_row$ENDPAPERPRINTING$2, 
                      @lv_feedout_row$IMPORTDUTY$2, 
                      @lv_feedout_row$INBOUNDFREIGHT$2, 
                      @lv_feedout_row$INSERTEDITION$2, 
                      @lv_feedout_row$JACKETCOVERPAPER$2, 
                      @lv_feedout_row$JACKETPRINTING$2, 
                      @lv_feedout_row$MISC$2, 
                      @lv_feedout_row$MULTMEDMA$2, 
                      @lv_feedout_row$PAPERSTOCK$2, 
                      @lv_feedout_row$PLATES$2, 
                      @lv_feedout_row$PRINTERSUPPLIEDPAPER$2, 
                      @lv_feedout_row$PURCHFG$2, 
                      @lv_feedout_row$SPECIALMATERIALPACKING$2, 
                      @lv_feedout_row$TEXTPRINTING$2, 
                      @lv_feedout_row$ALTERATION$2, 
                      @lv_feedout_row$ART$2, 
                      @lv_feedout_row$AUTHORRELATED$2, 
                      @lv_feedout_row$COMPONENTDESIGNFEES$2, 
                      @lv_feedout_row$COMPOSITION$2, 
                      @lv_feedout_row$COPYEDITING$2, 
                      @lv_feedout_row$COVERJACKETS$2, 
                      @lv_feedout_row$EDITORIALRELATED$2, 
                      @lv_feedout_row$FREIGHT$2, 
                      @lv_feedout_row$FULLSERVICEMANAGEMENT$2, 
                      @lv_feedout_row$INDEXING$2, 
                      @lv_feedout_row$INSERTPLANT$2, 
                      @lv_feedout_row$MULTIMEDIAEDITORIAL$2, 
                      @lv_feedout_row$MULTIMEDIALPRODUCTION$2, 
                      @lv_feedout_row$OFFSET$2, 
                      @lv_feedout_row$OTHER$2, 
                      @lv_feedout_row$PHOTO$2, 
                      @lv_feedout_row$POD$2, 
                      @lv_feedout_row$PROOFREADING$2, 
                      @lv_feedout_row$PROOFSBLUES$2, 
                      @lv_feedout_row$RESEARCH$2, 
                      @lv_feedout_row$SEPERATIONSSCANSFILMS$2, 
                      @lv_feedout_row$TEXTPLANT$2, 
                      @lv_feedout_row$TEXTDESIGN$2, 
                      @lv_feedout_row$TOLERANCE$2, 
                      @lv_feedout_row$ESTUNITCOST$2, 
                      @lv_feedout_row$ESTMFRTOT$2, 
                      @lv_feedout_row$DELCOMPLETE$2, 
                      @lv_feedout_row$COMPLETEQTY$2, 
                      @lv_feedout_row$COMPLETEQTYDATE$2, 
                      @lv_feedout_row$COMPLETEVAL$2, 
                      @lv_feedout_row$COMPLETEVALDATE$2, 
                      @lv_feedout_row$POCOMMENT$2, 
                      @lv_feedout_row$PPESTCOST25$2, 
                      @lv_feedout_row$PPESTCOST26$2, 
                      @lv_feedout_row$PPESTCOST27$2, 
                      @lv_feedout_row$PPESTCOST28$2, 
                      @lv_feedout_row$PPESTCOST29$2, 
                      @lv_feedout_row$PPESTCOST30$2, 
                      @lv_feedout_row$ORIESTCOST22$2, 
                      @lv_feedout_row$ORIESTCOST23$2, 
                      @lv_feedout_row$ORIESTCOST24$2, 
                      @lv_feedout_row$ORIESTCOST25$2, 
                      @lv_feedout_row$ORIESTCOST26$2, 
                      @lv_feedout_row$ORIESTCOST27$2, 
                      @lv_feedout_row$ORIESTCOST28$2, 
                      @lv_feedout_row$ORIESTCOST29$2, 
                      @lv_feedout_row$ORIESTCOST30$2, 
                      @lv_feedout_row$STATUSCODE$2, 
                      @lv_feedout_row$ESTPREPRESSTOTAL$2


                  /*****
                  *  WARNING ORA2MS-4019: Value of @@FETCH_STATUS might be changed by previous FETCH operation on the other cursor(s), if these cursors are used simultaneously.
                  *****/

                  WHILE  NOT(@@FETCH_STATUS = -1)
                    BEGIN

                      IF (@@FETCH_STATUS = -1)
                        BEGIN

                          INSERT INTO dbo.FEEDERROR
                            (dbo.FEEDERROR.BATCHNUMBER, dbo.FEEDERROR.PROCESSDATE, dbo.FEEDERROR.ERRORDESC)
                            VALUES ('16', getdate(), ('POMS export, no rows to export ' + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YY HH24:MI:SS'), '')))

                          IF (@@TRANCOUNT > 0)
                              COMMIT WORK

                          BREAK 

                        END

                      IF (@firstrow = 1)
                        BEGIN

                          /*
                           -- SEQUENCE NUMBER this file will be manually added to the proper directory before
                           -- first run
                           -- 		starting number = 1
                           --*/

                            BEGIN TRY

                              open_input_file:

                              /*  Open Output File  */

                              EXEC SYSDB.SSMA.UTL_FILE_FOPEN$IMPL @p_location, 'poms_batchid.txt', 'R', 1024, @lv_file_id_num2 OUTPUT 

                            END TRY
                            BEGIN CATCH
                              BEGIN
                                declare @db_null_statement_2 int
                              END
                            END CATCH

                          IF (SYSDB.SSMA.UTL_FILE_IS_OPEN(@lv_file_id_num2) <> /* FALSE */ 0)
                            BEGIN

                              SET @feedout_batchid = ''

                              EXEC SYSDB.SSMA.UTL_FILE_GET_LINE @lv_file_id_num2, @feedout_batchid OUTPUT, DEFAULT 

                              EXEC SYSDB.SSMA.UTL_FILE_FCLOSE @lv_file_id_num2 

                            END
                          ELSE 
                            BEGIN

                              SET @feedout_batchid = '1'

                              EXEC SYSDB.SSMA.UTL_FILE_FOPEN$IMPL @p_location, 'poms_batchid.txt', 'W', 32767, @lv_file_id_num2 OUTPUT 

                              EXEC SYSDB.SSMA.UTL_FILE_PUT_LINE @lv_file_id_num2, @feedout_batchid 

                              EXEC SYSDB.SSMA.UTL_FILE_FCLOSE @lv_file_id_num2 

                            END

                          IF (@feedout_batchid > 0)
                            SET @feedout_batchid_char = SYSDB.SSMA.LPAD_VARCHAR(CAST( @feedout_batchid AS varchar(8000)), 8, '0')

                          /* 5-26-04 was not accounting for empty recordtype rows */

                          SELECT @totalcount = count( * )
                            FROM dbo.POFEEDOUT
                            WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')


                          /*****
                          *  WARNING ORA2MS-4045: Exception raising procedure call should be placed here, but it was omitted 
                          * 	according to current conversion options because it does not have correspondent handler in current routine.
                          * 	Please see conversion options for other choices.
                          *****/


                          /*  No Delimiters anymore.. now fixed length  change name 11-21-03 */

                          SET @c_filename = ('V' + isnull(@feedout_batchid_char, '') + '.POMS_IN')

                          EXEC SYSDB.SSMA.UTL_FILE_FOPEN$IMPL @p_location, @c_filename, 'W', 32767, @lv_file_id_num OUTPUT 

                          SET @c_filename = SYSDB.SSMA.LPAD_VARCHAR(@c_filename, 25, ' ')

                          SET @lv_output_string = ('H ' + isnull(@feedout_batchid_char, '') + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YYYY'), '') + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'hh:mm:ss'), '') + isnull(@c_filename, '') + 'Y')

                          EXEC SYSDB.SSMA.UTL_FILE_PUT_LINE @lv_file_id_num, @lv_output_string 

                          SET @firstrow = (@firstrow + 1)

                        END

                      SET @lv_output_string = (isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$RECORDNAME$2, 2, ' '), '') + isnull(@lv_feedout_row$RECORDTYPE$2, '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$PONUMBER$2, 12, ' '), '') + isnull(@lv_feedout_row$ISBN10$2, '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(SYSDB.SSMA.SUBSTR3_VARCHAR(@lv_feedout_row$SUPPLIER$2, 1, 2), 2, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$ORDERTYPE$2, 1, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$TOLERANCE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$TOLERANCE$2 END, '0'), 3, '0'), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$ORDEREDDATE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$ORDEREDDATE$2 END, ' '), 10, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$DUEDATE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$DUEDATE$2 END, ' '), 10, ' '), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(isnull(CASE (@lv_feedout_row$PUBPRICE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$PUBPRICE$2 END, 0), 7, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PACKSIZE$2, 0) AS varchar(8000)), 4, 0), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$BINDERYQTY$2, 0) AS varchar(8000)), 7, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$WAREHOUSEQTY$2, 0) AS varchar(8000)), 7, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORDEREDQTY$2, 0) AS varchar(8000)), 7, 0), '')), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PRINTINGNUMBER$2, 0) AS varchar(8000)), 7, 0), '') + isnull(@lv_feedout_row$ESTDETAILS$2, '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ESTUNITCOST$2, 0) AS varchar(8000)), 6, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ESTMFRTOT$2, 0) AS varchar(8000)), 9, 0), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$DELCOMPLETE$2, 1, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$COMPLETEQTY$2, 1, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$COMPLETEQTYDATE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$COMPLETEQTYDATE$2 END, ' '), 10, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(@lv_feedout_row$COMPLETEVAL$2, 1, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$COMPLETEVALDATE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$COMPLETEVALDATE$2 END, ' '), 10, ' '), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$POCOMMENT$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$POCOMMENT$2 END, ' '), 42, ' '), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ALTERATION$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ART$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$AUTHORRELATED$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COMPONENTDESIGNFEES$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COMPOSITION$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COPYEDITING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COVERJACKETS$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$EDITORIALRELATED$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$FREIGHT$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$FULLSERVICEMANAGEMENT$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$INDEXING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$INSERTPLANT$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$MULTIMEDIAEDITORIAL$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$MULTIMEDIALPRODUCTION$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$OFFSET$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$OTHER$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PHOTO$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$POD$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PROOFREADING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PROOFSBLUES$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$RESEARCH$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$SEPERATIONSSCANSFILMS$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$TEXTPLANT$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$TEXTDESIGN$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST25$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST26$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST27$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST28$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST29$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PPESTCOST30$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$BINDINGS$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$CARTONINGPALLETING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$STAMPDIES$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COVERPRINTING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$COVERS$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$DOCUTECH$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ENDPAPERPRINTING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$IMPORTDUTY$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$INBOUNDFREIGHT$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$INSERTEDITION$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$JACKETCOVERPAPER$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$JACKETPRINTING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$MISC$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$MULTMEDMA$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PAPERSTOCK$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PLATES$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PRINTERSUPPLIEDPAPER$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$PURCHFG$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$SPECIALMATERIALPACKING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$TEXTPRINTING$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ENDPAPERS$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST22$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST23$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST24$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST25$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST26$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST27$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST28$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST29$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( isnull(@lv_feedout_row$ORIESTCOST30$2, 0) AS varchar(8000)), 9, 0), '')), '') + isnull(('+' + isnull(SYSDB.SSMA.LPAD_VARCHAR(isnull(CASE (@lv_feedout_row$ESTPREPRESSTOTAL$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$ESTPREPRESSTOTAL$2 END, 0), 8, 0), '')), '') + isnull(SYSDB.SSMA.RPAD_VARCHAR(isnull(CASE (@lv_feedout_row$STATUSCODE$2 + '.') WHEN '.' THEN NULL ELSE @lv_feedout_row$STATUSCODE$2 END, ' '), 2, ' '), ''))

                      EXEC SYSDB.SSMA.UTL_FILE_PUT_LINE @lv_file_id_num, @lv_output_string 

                      IF (@lv_feedout_row$BINDERYQTY$2 IS NULL)
                        SET @lv_feedout_row$BINDERYQTY$2 = 0

                      IF (@lv_feedout_row$ORDEREDQTY$2 IS NULL)
                        SET @lv_feedout_row$ORDEREDQTY$2 = 0

                      IF (@lv_feedout_row$WAREHOUSEQTY$2 IS NULL)
                        SET @lv_feedout_row$WAREHOUSEQTY$2 = 0

                      IF (@lv_feedout_row$ESTMFRTOT$2 IS NULL)
                        SET @lv_feedout_row$ESTMFRTOT$2 = 0

                      IF (@lv_feedout_row$ESTUNITCOST$2 IS NULL)
                        SET @lv_feedout_row$ESTUNITCOST$2 = 0

                      /* zero for now */

                      SET @totalppestmfruc = 0

                      SET @totalppestmfruc = 0

                      FETCH NEXT FROM c_feedout
                        INTO 
                          @lv_feedout_row$RECORDNAME$2, 
                          @lv_feedout_row$RECORDTYPE$2, 
                          @lv_feedout_row$ISBN10$2, 
                          @lv_feedout_row$PONUMBER$2, 
                          @lv_feedout_row$SUPPLIER$2, 
                          @lv_feedout_row$ORDERTYPE$2, 
                          @lv_feedout_row$PACKPO$2, 
                          @lv_feedout_row$REQUESTIONER$2, 
                          @lv_feedout_row$PRINTINGNUMBER$2, 
                          @lv_feedout_row$ESTDETAILS$2, 
                          @lv_feedout_row$PACKSIZE$2, 
                          @lv_feedout_row$BINDERYQTY$2, 
                          @lv_feedout_row$WAREHOUSEQTY$2, 
                          @lv_feedout_row$ORDEREDQTY$2, 
                          @lv_feedout_row$EDITIONTOTALCOST$2, 
                          @lv_feedout_row$PLANTTOTALCOST$2, 
                          @lv_feedout_row$ORDEREDDATE$2, 
                          @lv_feedout_row$DUEDATE$2, 
                          @lv_feedout_row$PUBPRICE$2, 
                          @lv_feedout_row$BINDINGS$2, 
                          @lv_feedout_row$CARTONINGPALLETING$2, 
                          @lv_feedout_row$STAMPDIES$2, 
                          @lv_feedout_row$COVERPRINTING$2, 
                          @lv_feedout_row$COVERS$2, 
                          @lv_feedout_row$DOCUTECH$2, 
                          @lv_feedout_row$ENDPAPERS$2, 
                          @lv_feedout_row$ENDPAPERPRINTING$2, 
                          @lv_feedout_row$IMPORTDUTY$2, 
                          @lv_feedout_row$INBOUNDFREIGHT$2, 
                          @lv_feedout_row$INSERTEDITION$2, 
                          @lv_feedout_row$JACKETCOVERPAPER$2, 
                          @lv_feedout_row$JACKETPRINTING$2, 
                          @lv_feedout_row$MISC$2, 
                          @lv_feedout_row$MULTMEDMA$2, 
                          @lv_feedout_row$PAPERSTOCK$2, 
                          @lv_feedout_row$PLATES$2, 
                          @lv_feedout_row$PRINTERSUPPLIEDPAPER$2, 
                          @lv_feedout_row$PURCHFG$2, 
                          @lv_feedout_row$SPECIALMATERIALPACKING$2, 
                          @lv_feedout_row$TEXTPRINTING$2, 
                          @lv_feedout_row$ALTERATION$2, 
                          @lv_feedout_row$ART$2, 
                          @lv_feedout_row$AUTHORRELATED$2, 
                          @lv_feedout_row$COMPONENTDESIGNFEES$2, 
                          @lv_feedout_row$COMPOSITION$2, 
                          @lv_feedout_row$COPYEDITING$2, 
                          @lv_feedout_row$COVERJACKETS$2, 
                          @lv_feedout_row$EDITORIALRELATED$2, 
                          @lv_feedout_row$FREIGHT$2, 
                          @lv_feedout_row$FULLSERVICEMANAGEMENT$2, 
                          @lv_feedout_row$INDEXING$2, 
                          @lv_feedout_row$INSERTPLANT$2, 
                          @lv_feedout_row$MULTIMEDIAEDITORIAL$2, 
                          @lv_feedout_row$MULTIMEDIALPRODUCTION$2, 
                          @lv_feedout_row$OFFSET$2, 
                          @lv_feedout_row$OTHER$2, 
                          @lv_feedout_row$PHOTO$2, 
                          @lv_feedout_row$POD$2, 
                          @lv_feedout_row$PROOFREADING$2, 
                          @lv_feedout_row$PROOFSBLUES$2, 
                          @lv_feedout_row$RESEARCH$2, 
                          @lv_feedout_row$SEPERATIONSSCANSFILMS$2, 
                          @lv_feedout_row$TEXTPLANT$2, 
                          @lv_feedout_row$TEXTDESIGN$2, 
                          @lv_feedout_row$TOLERANCE$2, 
                          @lv_feedout_row$ESTUNITCOST$2, 
                          @lv_feedout_row$ESTMFRTOT$2, 
                          @lv_feedout_row$DELCOMPLETE$2, 
                          @lv_feedout_row$COMPLETEQTY$2, 
                          @lv_feedout_row$COMPLETEQTYDATE$2, 
                          @lv_feedout_row$COMPLETEVAL$2, 
                          @lv_feedout_row$COMPLETEVALDATE$2, 
                          @lv_feedout_row$POCOMMENT$2, 
                          @lv_feedout_row$PPESTCOST25$2, 
                          @lv_feedout_row$PPESTCOST26$2, 
                          @lv_feedout_row$PPESTCOST27$2, 
                          @lv_feedout_row$PPESTCOST28$2, 
                          @lv_feedout_row$PPESTCOST29$2, 
                          @lv_feedout_row$PPESTCOST30$2, 
                          @lv_feedout_row$ORIESTCOST22$2, 
                          @lv_feedout_row$ORIESTCOST23$2, 
                          @lv_feedout_row$ORIESTCOST24$2, 
                          @lv_feedout_row$ORIESTCOST25$2, 
                          @lv_feedout_row$ORIESTCOST26$2, 
                          @lv_feedout_row$ORIESTCOST27$2, 
                          @lv_feedout_row$ORIESTCOST28$2, 
                          @lv_feedout_row$ORIESTCOST29$2, 
                          @lv_feedout_row$ORIESTCOST30$2, 
                          @lv_feedout_row$STATUSCODE$2, 
                          @lv_feedout_row$ESTPREPRESSTOTAL$2

                    END

                  CLOSE c_feedout

                  DEALLOCATE c_feedout

                END

                IF (cursor_status(N'local', N'c_feedout') = 1)
                  BEGIN
                    CLOSE c_feedout
                    DEALLOCATE c_feedout
                  END

                IF (CAST( @feedout_batchid AS float) > 0)
                  BEGIN

                    /* 4-23-04 rows exported so do trailer and batch increment */

                    /*  1-13-04 change to sum since adding was not working */

                    SELECT @totalbinderyqty = sum(dbo.POFEEDOUT.BINDERYQTY)
                      FROM dbo.POFEEDOUT
                      WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')


                    /*****
                    *  WARNING ORA2MS-4045: Exception raising procedure call should be placed here, but it was omitted 
                    * 	according to current conversion options because it does not have correspondent handler in current routine.
                    * 	Please see conversion options for other choices.
                    *****/


                    SELECT @totalwhqty = sum(dbo.POFEEDOUT.WAREHOUSEQTY)
                      FROM dbo.POFEEDOUT
                      WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')


                    /*****
                    *  WARNING ORA2MS-4045: Exception raising procedure call should be placed here, but it was omitted 
                    * 	according to current conversion options because it does not have correspondent handler in current routine.
                    * 	Please see conversion options for other choices.
                    *****/


                    SELECT @totalestmfrtot = sum(dbo.POFEEDOUT.ESTMFRTOT)
                      FROM dbo.POFEEDOUT
                      WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')


                    /*****
                    *  WARNING ORA2MS-4045: Exception raising procedure call should be placed here, but it was omitted 
                    * 	according to current conversion options because it does not have correspondent handler in current routine.
                    * 	Please see conversion options for other choices.
                    *****/


                    SELECT @totalqtyordered = sum(dbo.POFEEDOUT.ORDEREDQTY)
                      FROM dbo.POFEEDOUT
                      WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') <> '.')


                    /*****
                    *  WARNING ORA2MS-4045: Exception raising procedure call should be placed here, but it was omitted 
                    * 	according to current conversion options because it does not have correspondent handler in current routine.
                    * 	Please see conversion options for other choices.
                    *****/


                    SET @lv_output_string = ('T ' + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalcount AS varchar(8000)), 7, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalbinderyqty AS varchar(8000)), 7, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalwhqty AS varchar(8000)), 7, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalqtyordered AS varchar(8000)), 7, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalppestmfruc AS varchar(8000)), 14, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totaloriestmfruc AS varchar(8000)), 14, 0), '') + isnull(SYSDB.SSMA.LPAD_VARCHAR(CAST( @totalestmfrtot AS varchar(8000)), 14, 0), '') + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YYYY'), '') + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'hh:mm:ss'), ''))

                    EXEC SYSDB.SSMA.UTL_FILE_PUT_LINE @lv_file_id_num, @lv_output_string 

                    EXEC SYSDB.SSMA.UTL_FILE_FCLOSE @lv_file_id_num 

                    INSERT INTO dbo.FEEDERROR
                      (dbo.FEEDERROR.BATCHNUMBER, dbo.FEEDERROR.PROCESSDATE, dbo.FEEDERROR.ERRORDESC)
                      VALUES ('16', getdate(), ('POMS file exported ' + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YY HH24:MI:SS'), '')))

                    IF (@@TRANCOUNT > 0)
                        COMMIT WORK

                    /*  increment sequence number  */

                    EXEC SYSDB.SSMA.UTL_FILE_FOPEN$IMPL @p_location, 'poms_batchid.txt', 'W', 1024, @lv_file_id_num2 OUTPUT 

                    SET @feedout_batchid = (@feedout_batchid + 1)

                    EXEC SYSDB.SSMA.UTL_FILE_PUT_LINE @lv_file_id_num2, @feedout_batchid 

                    EXEC SYSDB.SSMA.UTL_FILE_FCLOSE @lv_file_id_num2 

                  END
                ELSE 
                  BEGIN
                    INSERT INTO dbo.FEEDERROR
                      (dbo.FEEDERROR.BATCHNUMBER, dbo.FEEDERROR.PROCESSDATE, dbo.FEEDERROR.ERRORDESC)
                      VALUES ('16', getdate(), ('POMS export no rows to export ' + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YY HH24:MI:SS'), '')))
                    IF (@@TRANCOUNT > 0)
                        COMMIT WORK
                  END

              END TRY
              BEGIN CATCH

                DECLARE 
                  @ErrorMessage nvarchar(4000),
                  @ErrorNumber int,
                  @ExceptionIdentifier nvarchar(4000)                

                SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorNumber = ERROR_NUMBER()

                SELECT @ExceptionIdentifier = SYSDB.SSMA.db_error_get_oracle_exception_id(@ErrorMessage, @ErrorNumber)

                BEGIN

                  PRINT SYSDB.SSMA.DB_ERROR_SQLERRM_0(@ExceptionIdentifier)

                  PRINT ('ERROR WHILE CREATING ' + isnull(@p_location, '') + '\' + 'POMS_IN' + ' FROM ' + isnull(@p_tablename, ''))


                  /*****
                  *  ERROR ORA2MS-2020 line: 257 col: 40: Conversion of procedure SYS.UTL_FILE.FCLOSE_ALL() is not supported.

                  Source code:

                    UTL_FILE.fclose_all;


                  Attempted target code:

                    EXEC dbo.UTL_FILE$fclose_all  


                  *****/


                  INSERT INTO dbo.FEEDERROR
                    (dbo.FEEDERROR.BATCHNUMBER, dbo.FEEDERROR.PROCESSDATE, dbo.FEEDERROR.ERRORDESC)
                    VALUES ('16', getdate(), ('POMS export failed' + isnull(SYSDB.SSMA.TO_CHAR_DATE(getdate(), 'MM/DD/YY
HH24:MI:SS'), '')))

                  IF (@@TRANCOUNT > 0)
                      COMMIT WORK

                  IF (cursor_status(N'local', N'c_feedout') = 1)
                    BEGIN
                      CLOSE c_feedout
                      DEALLOCATE c_feedout
                    END

                END

              END CATCH
          END
        ELSE 
          PRINT ('UNDEFINED TABLE ' + isnull(@p_tablename, ''))

        /*  9/28 preserve po's with no record types to figure out why they are not feeding */

        INSERT INTO dbo.POFEEDOUTTEMP
          (
            RECORDNAME, 
            RECORDTYPE, 
            ISBN10, 
            PONUMBER, 
            SUPPLIER, 
            ORDERTYPE, 
            PACKPO, 
            REQUESTIONER, 
            PRINTINGNUMBER, 
            ESTDETAILS, 
            PACKSIZE, 
            BINDERYQTY, 
            WAREHOUSEQTY, 
            ORDEREDQTY, 
            EDITIONTOTALCOST, 
            PLANTTOTALCOST, 
            ORDEREDDATE, 
            DUEDATE, 
            PUBPRICE, 
            BINDINGS, 
            CARTONINGPALLETING, 
            STAMPDIES, 
            COVERPRINTING, 
            COVERS, 
            DOCUTECH, 
            ENDPAPERS, 
            ENDPAPERPRINTING, 
            IMPORTDUTY, 
            INBOUNDFREIGHT, 
            INSERTEDITION, 
            JACKETCOVERPAPER, 
            JACKETPRINTING, 
            MISC, 
            MULTMEDMA, 
            PAPERSTOCK, 
            PLATES, 
            PRINTERSUPPLIEDPAPER, 
            PURCHFG, 
            SPECIALMATERIALPACKING, 
            TEXTPRINTING, 
            ALTERATION, 
            ART, 
            AUTHORRELATED, 
            COMPONENTDESIGNFEES, 
            COMPOSITION, 
            COPYEDITING, 
            COVERJACKETS, 
            EDITORIALRELATED, 
            FREIGHT, 
            FULLSERVICEMANAGEMENT, 
            INDEXING, 
            INSERTPLANT, 
            MULTIMEDIAEDITORIAL, 
            MULTIMEDIALPRODUCTION, 
            OFFSET, 
            OTHER, 
            PHOTO, 
            POD, 
            PROOFREADING, 
            PROOFSBLUES, 
            RESEARCH, 
            SEPERATIONSSCANSFILMS, 
            TEXTPLANT, 
            TEXTDESIGN, 
            TOLERANCE, 
            ESTUNITCOST, 
            ESTMFRTOT, 
            DELCOMPLETE, 
            COMPLETEQTY, 
            COMPLETEQTYDATE, 
            COMPLETEVAL, 
            COMPLETEVALDATE, 
            POCOMMENT, 
            PPESTCOST25, 
            PPESTCOST26, 
            PPESTCOST27, 
            PPESTCOST28, 
            PPESTCOST29, 
            PPESTCOST30, 
            ORIESTCOST22, 
            ORIESTCOST23, 
            ORIESTCOST24, 
            ORIESTCOST25, 
            ORIESTCOST26, 
            ORIESTCOST27, 
            ORIESTCOST28, 
            ORIESTCOST29, 
            ORIESTCOST30, 
            STATUSCODE, 
            ESTPREPRESSTOTAL
          )

          /*****
          *  INFO ORA2MS-6011 : All asterisks in expression list were expanded into real expressions.
          *****/

          SELECT 
              dbo.POFEEDOUT.RECORDNAME, 
              dbo.POFEEDOUT.RECORDTYPE, 
              dbo.POFEEDOUT.ISBN10, 
              dbo.POFEEDOUT.PONUMBER, 
              dbo.POFEEDOUT.SUPPLIER, 
              dbo.POFEEDOUT.ORDERTYPE, 
              dbo.POFEEDOUT.PACKPO, 
              dbo.POFEEDOUT.REQUESTIONER, 
              dbo.POFEEDOUT.PRINTINGNUMBER, 
              dbo.POFEEDOUT.ESTDETAILS, 
              dbo.POFEEDOUT.PACKSIZE, 
              dbo.POFEEDOUT.BINDERYQTY, 
              dbo.POFEEDOUT.WAREHOUSEQTY, 
              dbo.POFEEDOUT.ORDEREDQTY, 
              dbo.POFEEDOUT.EDITIONTOTALCOST, 
              dbo.POFEEDOUT.PLANTTOTALCOST, 
              dbo.POFEEDOUT.ORDEREDDATE, 
              dbo.POFEEDOUT.DUEDATE, 
              dbo.POFEEDOUT.PUBPRICE, 
              dbo.POFEEDOUT.BINDINGS, 
              dbo.POFEEDOUT.CARTONINGPALLETING, 
              dbo.POFEEDOUT.STAMPDIES, 
              dbo.POFEEDOUT.COVERPRINTING, 
              dbo.POFEEDOUT.COVERS, 
              dbo.POFEEDOUT.DOCUTECH, 
              dbo.POFEEDOUT.ENDPAPERS, 
              dbo.POFEEDOUT.ENDPAPERPRINTING, 
              dbo.POFEEDOUT.IMPORTDUTY, 
              dbo.POFEEDOUT.INBOUNDFREIGHT, 
              dbo.POFEEDOUT.INSERTEDITION, 
              dbo.POFEEDOUT.JACKETCOVERPAPER, 
              dbo.POFEEDOUT.JACKETPRINTING, 
              dbo.POFEEDOUT.MISC, 
              dbo.POFEEDOUT.MULTMEDMA, 
              dbo.POFEEDOUT.PAPERSTOCK, 
              dbo.POFEEDOUT.PLATES, 
              dbo.POFEEDOUT.PRINTERSUPPLIEDPAPER, 
              dbo.POFEEDOUT.PURCHFG, 
              dbo.POFEEDOUT.SPECIALMATERIALPACKING, 
              dbo.POFEEDOUT.TEXTPRINTING, 
              dbo.POFEEDOUT.ALTERATION, 
              dbo.POFEEDOUT.ART, 
              dbo.POFEEDOUT.AUTHORRELATED, 
              dbo.POFEEDOUT.COMPONENTDESIGNFEES, 
              dbo.POFEEDOUT.COMPOSITION, 
              dbo.POFEEDOUT.COPYEDITING, 
              dbo.POFEEDOUT.COVERJACKETS, 
              dbo.POFEEDOUT.EDITORIALRELATED, 
              dbo.POFEEDOUT.FREIGHT, 
              dbo.POFEEDOUT.FULLSERVICEMANAGEMENT, 
              dbo.POFEEDOUT.INDEXING, 
              dbo.POFEEDOUT.INSERTPLANT, 
              dbo.POFEEDOUT.MULTIMEDIAEDITORIAL, 
              dbo.POFEEDOUT.MULTIMEDIALPRODUCTION, 
              dbo.POFEEDOUT.OFFSET, 
              dbo.POFEEDOUT.OTHER, 
              dbo.POFEEDOUT.PHOTO, 
              dbo.POFEEDOUT.POD, 
              dbo.POFEEDOUT.PROOFREADING, 
              dbo.POFEEDOUT.PROOFSBLUES, 
              dbo.POFEEDOUT.RESEARCH, 
              dbo.POFEEDOUT.SEPERATIONSSCANSFILMS, 
              dbo.POFEEDOUT.TEXTPLANT, 
              dbo.POFEEDOUT.TEXTDESIGN, 
              dbo.POFEEDOUT.TOLERANCE, 
              dbo.POFEEDOUT.ESTUNITCOST, 
              dbo.POFEEDOUT.ESTMFRTOT, 
              dbo.POFEEDOUT.DELCOMPLETE, 
              dbo.POFEEDOUT.COMPLETEQTY, 
              dbo.POFEEDOUT.COMPLETEQTYDATE, 
              dbo.POFEEDOUT.COMPLETEVAL, 
              dbo.POFEEDOUT.COMPLETEVALDATE, 
              dbo.POFEEDOUT.POCOMMENT, 
              dbo.POFEEDOUT.PPESTCOST25, 
              dbo.POFEEDOUT.PPESTCOST26, 
              dbo.POFEEDOUT.PPESTCOST27, 
              dbo.POFEEDOUT.PPESTCOST28, 
              dbo.POFEEDOUT.PPESTCOST29, 
              dbo.POFEEDOUT.PPESTCOST30, 
              dbo.POFEEDOUT.ORIESTCOST22, 
              dbo.POFEEDOUT.ORIESTCOST23, 
              dbo.POFEEDOUT.ORIESTCOST24, 
              dbo.POFEEDOUT.ORIESTCOST25, 
              dbo.POFEEDOUT.ORIESTCOST26, 
              dbo.POFEEDOUT.ORIESTCOST27, 
              dbo.POFEEDOUT.ORIESTCOST28, 
              dbo.POFEEDOUT.ORIESTCOST29, 
              dbo.POFEEDOUT.ORIESTCOST30, 
              dbo.POFEEDOUT.STATUSCODE, 
              dbo.POFEEDOUT.ESTPREPRESSTOTAL
            FROM dbo.POFEEDOUT
            WHERE (ISNULL((dbo.POFEEDOUT.RECORDTYPE + '.'), '.') = '.')

        IF (@@TRANCOUNT > 0)
            COMMIT WORK

      END

GO




